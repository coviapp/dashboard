{"version":3,"sources":["components/useForm.js","imgs/bcrth.jpg","components/Login.js","components/Footer.js","components/Dashboard.js","components/StudentData.js","components/Graph.js","components/NotFound.js","components/Logout.js","components/Router.js","index.js"],"names":["useForm","initialValues","useState","values","setValues","e","target","name","value","preventDefault","Axios","post","username","password","then","res","data","jwtToken","localStorage","setItem","loggedIn","error","catch","response","request","message","useStyles","makeStyles","sep","margin","header","paddingTop","textAlign","color","fontSize","fontWeight","Login","classes","getItem","state","handleChange","formSubmit","to","style","backgroundImage","Background","backgroundSize","height","Container","component","maxWidth","CssBaseline","className","noValidate","TextField","variant","required","fullWidth","id","label","autoComplete","autoFocus","onChange","InputLabelProps","type","Button","onClick","withStyles","theme","root","mixins","gutters","backgroundColor","footer","marginTop","spacing","unit","padding","borderRadius","textProps","props","Paper","elevation","Typography","align","href","myCustomSortingAlgorithm","a","b","spo2","flexGrow","menuButton","marginRight","fontFamily","title","Dashboard","rows","fetchError","setState","useEffect","getData","token","config","headers","Authorization","axios","get","patientList","sort","console","log","newJwtToken","interval","setInterval","clearInterval","ErrorDialog","Fragment","AppBar","position","background","Toolbar","columns","field","filtering","customSort","cellStyle","columnData","spo2Value","render","chkDate","Date","date","format","options","exportButton","exportAllData","pageSize","search","sorting","actionsColumnIndex","headerStyle","rowStyle","actions","rowData","icon","ArrowForwardIcon","tooltip","history","push","pathname","ec_rollno","StyledTableCell","head","palette","common","white","body","TableCell","StyledTableRow","action","hover","TableRow","createData","details","table","width","alignSelf","StudentData","TableContainer","Table","aria-label","TableHead","TableBody","map","row","scope","entryTimeDateObject","appbar","graph","display","flexDirection","indivgraph","marginBottom","newtable","Graph","entryTime","spo2Data","tempData","pulseData","getPatientData","patientId","location","bodyParams","patid","vals","_entryTime","entry","entryDate","_entryTimeDateObject","_spo2Data","_tempData","_pulseRate","_rows","i","Math","min","length","dict","retry","newJwt","labels","datasets","borderColor","borderWidth","plugins","text","font","size","scales","y","ticks","callback","x","beginAtZero","dateSetting","locale","NotFound","Logout","removeItem","Router","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84d2017d.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport Axios from \"axios\"\r\n\r\nconst useForm = initialValues => {\r\n    const [values, setValues] = useState(initialValues);\r\n\r\n    return [\r\n        values,\r\n        e => {\r\n            // console.log(e)\r\n            setValues({\r\n                ...values,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        },\r\n        e => {\r\n            e.preventDefault()\r\n\r\n            Axios\r\n                .post(\"https://imedixbcr.iitkgp.ac.in/api/user/login\", { \r\n                    username: values.username, \r\n                    password: values.password \r\n                })\r\n                .then(res => {\r\n                    if(res.data['type'] === \"doc\" || res.data['type'] === \"rOP\" || res.data['type'] === \"pOP\") {\r\n                        const jwtToken = res.data['jwtToken']\r\n                        localStorage.setItem(\"token\", jwtToken)\r\n                        localStorage.setItem(\"username\", values.username)\r\n                        localStorage.setItem(\"password\", values.password)\r\n                        setValues({\r\n                            ...values,\r\n                            loggedIn: true\r\n                        })\r\n                    } else {\r\n                        setValues({\r\n                            ...values,\r\n                            error: \"Forbidden\"\r\n                        })\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    if (error.response) {\r\n                        // Request made and server responded\r\n                        // console.log(error.response.data);\r\n                        // console.log(error.response.status);\r\n                        // console.log(error.response.headers);\r\n\r\n                        setValues({\r\n                            ...values,\r\n                            error: error.response.data.error\r\n                        })\r\n                      } else if (error.request) {\r\n\r\n                        // The request was made but no response was received\r\n                        // console.log(error.request);\r\n\r\n                        setValues({\r\n                            ...values,\r\n                            error: error.request\r\n                        })\r\n                      } else {\r\n                        // Something happened in setting up the request that triggered an Error\r\n                        // console.log(error.message);\r\n\r\n                        setValues({\r\n                            ...values,\r\n                            error: error.message\r\n                        })\r\n                      }\r\n                })\r\n        }\r\n    ]\r\n}\r\n\r\nexport default useForm","export default __webpack_public_path__ + \"static/media/bcrth.cf284928.jpg\";","import Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport useForm from './useForm'\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Background from '../imgs/bcrth.jpg'\r\n\r\nconst useStyles = makeStyles({\r\n  sep: {\r\n    margin: 20\r\n  },\r\n  header: {\r\n    paddingTop: 40,\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n    fontSize: 40,\r\n    fontWeight: \"bold\"\r\n  }\r\n})\r\n\r\nconst Login = () => { \r\n  let loggedIn = false\r\n  const classes = useStyles()\r\n\r\n  const token = localStorage.getItem(\"token\")\r\n  if (token) loggedIn = true\r\n  // todo: verify the tokens!\r\n\r\n  const [ state, handleChange, formSubmit ] = useForm({\r\n    username: \"\",\r\n    password: \"\",\r\n    loggedIn: loggedIn,\r\n    error: \"\"\r\n  });\r\n\r\n  if (state.loggedIn === true) {\r\n    return <Redirect to=\"/dashboard\" />\r\n  }\r\n  \r\n  let content =  (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(${Background})`,\r\n        backgroundSize: 'cover',\r\n        height: '100vh',\r\n        margin: 0\r\n      }}\r\n    >\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      \r\n      <div>\r\n        \r\n        <div className={classes.header}>\r\n          Sign in\r\n        </div>\r\n\r\n        <form noValidate>\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            value={state.username}\r\n            autoFocus\r\n            onChange={handleChange}\r\n            InputLabelProps={{style: {fontSize: 21, fontWeight: \"bold\"}}}\r\n          />\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={state.password}\r\n            autoComplete=\"current-password\"\r\n            onChange={handleChange}\r\n            InputLabelProps={{style: {fontSize: 21, fontWeight: \"bold\"}}}\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={formSubmit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n\r\n        <div>\r\n          {state.error}      \r\n        </div>\r\n        \r\n      </div>\r\n    </Container>\r\n    </div>\r\n  )\r\n\r\n  return content\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n \r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    backgroundColor: 'black',\r\n  },\r\n  footer: {\r\n    backgroundColor: 'black',\r\n    marginTop: theme.spacing.unit ,\r\n    padding: `${theme.spacing.unit * 4}px 0`,\r\n    borderRadius: 6\r\n  },\r\n  textProps: {\r\n      color: 'White'\r\n  }\r\n});\r\n \r\nfunction Footer(props) {\r\n  const { classes } = props;\r\n \r\n  return (\r\n    <footer className={classes.footer}>\r\n      <Paper className={classes.root} elevation={1}>\r\n        <Typography align=\"center\" className={classes.textProps}>\r\n        &copy;<a href=\"https://github.com/coviapp\">CoviApp Organization</a>, All rights reserved\r\n        </Typography>\r\n      </Paper>\r\n    </footer>\r\n  );\r\n}\r\n \r\nFooter.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n \r\nexport default withStyles(styles)(Footer);","import React, { useState, useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport axios from 'axios'\r\n\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Footer from './Footer'\r\nimport date from 'date-and-time'\r\n\r\nconst degree = '\\xB0'\r\nconst spo2UpperBound = 95\r\nconst spo2LowerBound = 90\r\n\r\nconst myCustomSortingAlgorithm = {\r\n  ascending: (a, b) => a.spo2 - b.spo2,\r\n  descending: (a, b) => b.spo2 - a.spo2\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#00C9BC\",\r\n    flexGrow: 1,\r\n    borderRadius: 6\r\n  },\r\n  menuButton: {\r\n    marginRight: 2,\r\n    fontSize: 18,\r\n    fontFamily: \"Comic sans ms\",\r\n    backgroundColor: \"#E0FFFF\",\r\n    '&:hover': {\r\n      backgroundColor: \"#FFFDD0\",\r\n    }\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    fontSize: 25,\r\n    fontWeight: \"bold\"\r\n  },\r\n})\r\n\r\nconst Dashboard = props => {\r\n\r\n  let loggedIn = false\r\n  const token = localStorage.getItem(\"token\")\r\n  if (token) loggedIn = true\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    loggedIn: loggedIn,\r\n    rows: [], // rows will be a list of PATIENT OBJECT\r\n    fetchError: false,\r\n  })\r\n\r\n  const logout = () => {\r\n    setState({\r\n      loggedIn: false\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getData = async() => {\r\n      // console.log(\"Making a request!\")\r\n      const url = \"https://imedixbcr.iitkgp.ac.in/api/coviapp/get-all-patients\";\r\n      const token = localStorage.getItem(\"token\");\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      }\r\n      axios.get(\r\n        url,\r\n        config\r\n      ).then(response => response.data)\r\n        .then((data) => {\r\n          const patientList = data.data;\r\n          // console.log(data.data)\r\n          /*\r\n          Response structure:\r\n            dateofbirth: \"1990-06-15\"\r\n            ec_rollno: \"445566\"\r\n            entrytime: \"2021-06-02T11:26:20.000+00:00\"\r\n            fever: 97\r\n            food_supply: \"yes\"\r\n            hall: \"BRH\"\r\n            have_covid: \"yes\"\r\n            isolation_address: \"SAM\"\r\n            isolation_date: \"0006-12-11T18:30:00.000+00:00\"\r\n            name: \"coviapp demo2\"\r\n            parent_mobileno: \"1234567879\"\r\n            pat_id: \"BCRT0192805210001\"\r\n            patient_condition: \"ok\"\r\n            phone: \"2235488795\"\r\n            selected_category: \"PhD Student(Inst./Sponsored)\"\r\n            spo2: 97\r\n            supervisor_mobileno: \"123456789\"\r\n            supervisor_name: \"ABC\"\r\n            symptoms: \"feverish\"\r\n          */\r\n          setState({ rows: patientList.sort(myCustomSortingAlgorithm.ascending) })\r\n        })\r\n        .catch((error) => {\r\n          console.log('token is expired logging in again for getting jwt');\r\n          axios.post(\"https://imedixbcr.iitkgp.ac.in/api/user/login\", {\r\n            username: localStorage.getItem(\"username\"),\r\n            password: localStorage.getItem(\"password\")\r\n          }).then(res => {\r\n            const newJwtToken = res.data['jwtToken']\r\n            localStorage.setItem(\"token\", newJwtToken)\r\n\r\n            const url = \"https://imedixbcr.iitkgp.ac.in/api/coviapp/get-all-patients\";\r\n            const token = localStorage.getItem(\"token\");\r\n            const config = {\r\n              headers: { Authorization: `Bearer ${token}` }\r\n            };\r\n            axios.get(\r\n              url,\r\n              config\r\n            ).then(response => response.data)\r\n              .then((data) => {\r\n                const patientList = data.data;\r\n                // console.log(data.data)\r\n                setState({ rows: patientList.sort(myCustomSortingAlgorithm.ascending) })\r\n              })\r\n              .catch((error) => {\r\n                console.log('error in fetching get-all-patients');\r\n                setState({ fetchError: true })\r\n                // console.log(error.message)\r\n              })\r\n            }).catch(error => {\r\n              console.log('error in logging in again from local-storage credentials');\r\n            setState({ fetchError: true })\r\n            // console.log(error.message)\r\n          })\r\n        })\r\n      }\r\n      \r\n      getData()\r\n      const interval = setInterval(() => {\r\n        getData()\r\n      }, 20000)\r\n      return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  const _spo2Color = spo2Value => {\r\n    if (spo2Value >= spo2UpperBound) return 'white';\r\n    if (spo2Value >= spo2LowerBound) return 'orange';\r\n    return 'red';\r\n  }\r\n\r\n  if (state.loggedIn === false) {\r\n    return <Redirect to=\"/logout\" />\r\n  }\r\n\r\n  function ErrorDialog() {\r\n    if (state.fetchError) {\r\n      return <React.Fragment>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" style={{ background: '#ffe6e6' }} className={classes.root}>\r\n            <Toolbar>\r\n              <Typography color=\"error\" variant=\"h6\" className={classes.title}>\r\n                Some error occured. Please Logout\r\n            </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </div>\r\n      </React.Fragment>;\r\n    }\r\n    return <></>;\r\n  }\r\n\r\n  let content = (\r\n    <React.Fragment>\r\n      < ErrorDialog />\r\n      \r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" className={classes.root}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Welcome\r\n            </Typography>\r\n            <Button className={classes.menuButton} onClick={logout}>Logout</Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n\r\n      <MaterialTable\r\n        title=\"CoviApp Dashboard\"\r\n        columns={\r\n          [\r\n            {\r\n              title: 'Name',\r\n              field: 'name'\r\n            },\r\n            {\r\n              title: 'Category',\r\n              field: 'selected_category',\r\n              // lookup: { 1: 'Student', 2: 'Faculty', 3: 'Staff' },\r\n            },\r\n            {\r\n              title: 'Roll No/EC ',\r\n              field: 'ec_rollno'\r\n            },\r\n            {\r\n              title: 'Location',\r\n              field: 'isolation_address'\r\n            },\r\n            {\r\n              title: 'Temperature ' + degree + 'F',\r\n              field: 'fever',\r\n              type: \"numeric\",\r\n              filtering: false,\r\n              // customFilterAndSearch: (term, rowData) => term >= rowData.temperature,\r\n            },\r\n            {\r\n              title: 'SpO2 %',\r\n              field: 'spo2',\r\n              type: \"numeric\",\r\n              customSort: (a, b) => a.spo2 - b.spo2,\r\n              filtering: false,\r\n              // customFilterAndSearch: (term, rowData) => term >= rowData.spo2,\r\n              cellStyle: columnData => ({\r\n                backgroundColor: _spo2Color(columnData),\r\n              }),\r\n\r\n            },\r\n            {\r\n              title: 'Pulse Rate',\r\n              field: 'pulse_rate',\r\n              type: \"numeric\",\r\n              filtering: false,\r\n              // customFilterAndSearch: (term, rowData) => term >= rowData.pulse,\r\n            },\r\n            // {\r\n            //   title: 'Respiratory Rate',\r\n            //   field: 'resp',\r\n            //   type: \"numeric\",\r\n            //   filtering: false,\r\n            //   // customFilterAndSearch: (term, rowData) => term >= rowData.resp,\r\n            // },\r\n            // {\r\n            //   title: 'Discharged from Isolation',\r\n            //   field: 'status',\r\n            //   lookup: { 0: 'No', 1: 'Yes', },\r\n            // },\r\n            {\r\n              title: 'Condition',\r\n              field: 'patient_condition',\r\n              filtering: false,\r\n            },\r\n            {\r\n              title: 'Last Updated',\r\n              field: 'entrytime',\r\n              render: columnData => {\r\n                const chkDate = new Date(columnData['entrytime'])\r\n                return date.format(chkDate, 'HH:MM DD/MM/YY')\r\n              }\r\n            },\r\n          ]}\r\n\r\n        data={state.rows}\r\n        options={{\r\n          filtering: true,\r\n          exportButton: true,\r\n          exportAllData: true,\r\n          pageSize: 10,\r\n          search: true,\r\n          sorting: true,\r\n          actionsColumnIndex: 1,\r\n          headerStyle: {\r\n            fontSize: 20,\r\n            // fontFamily: \"Times New Roman\"\r\n          },\r\n          rowStyle: {\r\n            fontSize: 19\r\n          }\r\n\r\n        }}\r\n\r\n        actions={[\r\n          rowData => ({\r\n            icon: ArrowForwardIcon,\r\n            tooltip: 'Click to monitor',\r\n            onClick: () => {\r\n              props.history.push({\r\n                pathname: `../graphs/${rowData.ec_rollno}`,\r\n                state: rowData\r\n              })\r\n            }\r\n          })\r\n        ]}\r\n      />\r\n      \r\n      <Footer/>\r\n    </React.Fragment>\r\n  )\r\n  return content\r\n}\r\n\r\nexport default Dashboard","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#191970\",\r\n    color: theme.palette.common.white,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\"\r\n  },\r\n  body: {\r\n    fontSize: 16,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, details) {\r\n  return { name, details };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: \"90vw\",\r\n    maxWidth: 700,\r\n    alignSelf: \"center\"\r\n  }\r\n});\r\n\r\nexport default function StudentData(data) {\r\n  const classes = useStyles();\r\n  data = data.data\r\n\r\n  const rows = [\r\n    createData('Name', data['name']),\r\n    createData('Roll No / EC Number', data['ec_rollno']),\r\n    createData('Phone Number', data['phone']),\r\n    createData('Category', data['selected_category']),\r\n    createData('Parent\\'s mobile number', data['parent_mobileno']),\r\n  ];\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.table}>\r\n      <Table aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell >Patient details</StyledTableCell>\r\n            <StyledTableCell align=\"left\"></StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <StyledTableRow key={row.name}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"left\">{row.details}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import { React, useState, Fragment, useEffect } from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport StudentData from './StudentData'\r\nimport axios from 'axios'\r\nimport date from 'date-and-time'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MaterialTable from 'material-table'\r\nimport Footer from './Footer'\r\n\r\nconst degree = '\\xB0'\r\nconst spo2UpperBound = 95\r\nconst spo2LowerBound = 90\r\n\r\nconst myCustomSortingAlgorithm = {\r\n  ascending: (a, b) => (a.entryTimeDateObject > b.entryTimeDateObject) ? 1 : -1,\r\n  descending: (a, b) => (a.entryTimeDateObject < b.entryTimeDateObject) ? 1 : -1\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  appbar: {\r\n    backgroundColor: \"#00C9BC\",\r\n    borderRadius: 6,\r\n    fontWeight: \"bold\",\r\n  },\r\n  root: {\r\n    backgroundColor: \"#00C9BC\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    fontSize: 25,\r\n    fontWeight: \"bold\"\r\n  },\r\n  graph: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  indivgraph: {\r\n    width: \"90vw\",\r\n    maxWidth: 1200,\r\n    alignSelf: \"center\"\r\n  },\r\n  sep: {\r\n    marginTop: 40,\r\n    marginBottom: 40\r\n  },\r\n  newtable: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n});\r\n\r\nconst Graph = (props) => {\r\n\r\n  let loggedIn = false\r\n  const classes = useStyles()\r\n\r\n  const token = localStorage.getItem(\"token\")\r\n  if (token) loggedIn = true\r\n  // Todo: Verify the token\r\n\r\n  const [state, setState] = useState({\r\n    loggedIn: loggedIn,\r\n    entryTime: [],\r\n    entryTimeDateObject: [],\r\n    spo2Data: [],\r\n    tempData: [],\r\n    pulseData: [],\r\n    rows: [],\r\n  })\r\n\r\n  useEffect(() => {\r\n\r\n    const getPatientData = async () => {\r\n      const url = \"https://imedixbcr.iitkgp.ac.in/api/coviapp/get-patient-data\";\r\n      const token = localStorage.getItem(\"token\");\r\n      const patientId = props.location.state['pat_id']\r\n\r\n      const bodyParams = {\r\n        patid: patientId\r\n      }\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }\r\n\r\n      try {\r\n        const res = await axios.post(url, bodyParams, config)\r\n        const vals = res.data.data\r\n        const _entryTime = vals.map((entry) => {\r\n          const entryDate = new Date(entry['entrytime'])\r\n          return date.format(entryDate, 'HH:MM DD MMM')\r\n        });\r\n        const _entryTimeDateObject = vals.map((entry) => {\r\n          return new Date(entry['entrytime'])\r\n        });\r\n        const _spo2Data = vals.map((entry) => entry['spo2']);\r\n        const _tempData = vals.map((entry) => entry['fever']);\r\n        const _pulseRate = vals.map((entry) => entry['pulse_rate'])\r\n\r\n        const _rows=[]\r\n        for (let i = 0; i < Math.min(_tempData.length, _spo2Data.length, _entryTimeDateObject.length); i++) {\r\n          let dict = {};\r\n          dict['temperature'] = _tempData[i]\r\n          dict['spo2'] = _spo2Data[i]\r\n          dict['entryTimeDateObject'] = _entryTimeDateObject[i]\r\n          dict['entryTimeString'] = date.format(_entryTimeDateObject[i],'HH:MM:SS')\r\n          dict['pulse_rate'] = _pulseRate[i]\r\n          _rows.push(dict);\r\n        }\r\n\r\n        setState({\r\n          entryTime: _entryTime,\r\n          entryTimeDateObject: _entryTimeDateObject,\r\n          spo2Data: _spo2Data,\r\n          tempData: _tempData,\r\n          rows: _rows,\r\n          pulseData: _pulseRate\r\n        })\r\n\r\n      } catch (error) {\r\n        console.log(\"Logging in again!\")\r\n        try {\r\n          const retry = await axios.post(\"https://imedixbcr.iitkgp.ac.in/api/user/login\", {\r\n            username: localStorage.getItem(\"username\"),\r\n            password: localStorage.getItem(\"password\")\r\n          })\r\n          const newJwt = retry.data['jwtToken']\r\n          localStorage.setItem(\"token\", newJwt)\r\n        } catch (error) {\r\n          console.log(\"Caught an error in re login!\")\r\n          console.log(error)\r\n        }\r\n        getPatientData()\r\n      }\r\n    }\r\n    getPatientData()\r\n  }, [props.location.state])\r\n\r\n  if (state.loggedIn === false) {\r\n    return <Redirect to=\"/logout\" />\r\n  }\r\n\r\n  const _spo2Color = spo2Value => {\r\n    if (spo2Value >= spo2UpperBound) return 'white';\r\n    if (spo2Value >= spo2LowerBound) return 'orange';\r\n    return 'red';\r\n  }\r\n\r\n  let content = (\r\n    <Fragment>\r\n\r\n      <div className={classes.appbar}>\r\n        <AppBar position=\"static\" className={classes.appbar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Currently monitoring {props.location.state['name']}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n\r\n      <div className={classes.sep}>\r\n      </div>\r\n\r\n      <div className={classes.newtable}>\r\n        <StudentData className={classes.table} data={props.location.state} />\r\n      </div>\r\n\r\n      <div className={classes.sep}>\r\n      </div>\r\n\r\n      <div className={classes.graph}>\r\n        <div className={classes.indivgraph}>\r\n          <Line\r\n            data={{\r\n              labels: state.entryTime,\r\n              datasets: [\r\n                {\r\n                  label: 'Temperature',\r\n                  data: state.tempData,\r\n                  backgroundColor: 'rgba(0, 0, 255, 0.3)',\r\n                  borderColor: 'rgba(0, 0, 255, 1)',\r\n                  borderWidth: 1\r\n                }\r\n              ]\r\n            }}\r\n\r\n            options={{\r\n              plugins: {\r\n                title: {\r\n                  display: true,\r\n                  text: 'Temperature v/s time',\r\n                  font: {\r\n                    size: 20\r\n                  }\r\n                }\r\n              },\r\n              scales: {\r\n                y: {\r\n                  ticks: {\r\n                    callback: function (value) {\r\n                      return `${value}${degree} F`\r\n                    },\r\n                  }\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className={classes.sep}>\r\n        </div>\r\n\r\n        <div className={classes.indivgraph}>\r\n          <Line\r\n            data={{\r\n              labels: state.entryTime,\r\n              datasets: [\r\n                {\r\n                  label: 'SpO2',\r\n                  data: state.spo2Data,\r\n                  backgroundColor: 'rgba(255, 0, 0, 0.3)',\r\n                  borderColor: 'rgba(255, 0, 0, 1)',\r\n                  borderWidth: 1\r\n                }\r\n              ]\r\n            }}\r\n\r\n            options={{\r\n              plugins: {\r\n                title: {\r\n                  display: true,\r\n                  text: 'SpO2 v/s time',\r\n                  font: {\r\n                    size: 20\r\n                  }\r\n                }\r\n              },\r\n              scales: {\r\n                x: {\r\n                  beginAtZero: false\r\n                }\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className={classes.sep}>\r\n        </div>\r\n\r\n        <div className={classes.indivgraph}>\r\n          <Line\r\n            data={{\r\n              labels: state.entryTime,\r\n              datasets: [\r\n                {\r\n                  label: 'Pulse',\r\n                  data: state.pulseData,\r\n                  backgroundColor: 'rgba(255, 0, 0, 0.3)',\r\n                  borderColor: 'rgba(255, 0, 0, 1)',\r\n                  borderWidth: 1\r\n                }\r\n              ]\r\n            }}\r\n\r\n            options={{\r\n              plugins: {\r\n                title: {\r\n                  display: true,\r\n                  text: 'Pulse rate v/s time',\r\n                  font: {\r\n                    size: 20\r\n                  }\r\n                }\r\n              },\r\n              scales: {\r\n                x: {\r\n                  beginAtZero: false\r\n                }\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className={classes.sep}>\r\n        </div>\r\n\r\n        <div className={classes.indivgraph}>\r\n          <MaterialTable\r\n            title=\"DateWise Data\"\r\n            columns={\r\n              [\r\n                {\r\n                  title: 'Entry Date',\r\n                  field: 'entryTimeDateObject',\r\n                  type: \"date\",\r\n                  dateSetting: {\r\n                    format: 'dd/MM/yyyy',\r\n                    locale: \"en-GB\",\r\n                  },\r\n                },\r\n                {\r\n                  title: 'Entry Time',\r\n                  field: 'entryTimeString',\r\n                  filtering: false,\r\n                },\r\n                {\r\n                  title: 'Temperature ' + degree + 'F',\r\n                  field: 'temperature',\r\n                  type: \"numeric\",\r\n                  filtering: false,\r\n                  // customFilterAndSearch: (term, rowData) => term >= rowData.temperature,\r\n                },\r\n                {\r\n                  title: 'SpO2 %',\r\n                  field: 'spo2',\r\n                  type: \"numeric\",\r\n                  filtering: false,\r\n                  // customFilterAndSearch: (term, rowData) => term >= rowData.spo2,\r\n                  cellStyle: columnData => ({\r\n                    backgroundColor: _spo2Color(columnData),\r\n                  }),\r\n\r\n                },\r\n                {\r\n                  title: 'Pulse Rate',\r\n                  field: 'pulse_rate',\r\n                  type: \"numeric\",\r\n                  filtering: false,\r\n                  // customFilterAndSearch: (term, rowData) => term >= rowData.pulse,\r\n                },\r\n              ]}\r\n\r\n            data={state.rows.sort(myCustomSortingAlgorithm.descending)}\r\n\r\n            options={{ \r\n              search: false,\r\n              filtering: true,\r\n              exportButton: true,\r\n              exportAllData: true,\r\n              headerStyle: {\r\n                fontSize: 20,\r\n                // fontFamily: \"Times New Roman\"\r\n              },\r\n              rowStyle: {\r\n                fontSize: 19\r\n              },\r\n              sorting: true\r\n            }}\r\n\r\n          />\r\n\r\n          </div>\r\n        <div className={classes.sep}></div>\r\n      </div>\r\n\r\n      <Footer></Footer>\r\n    </Fragment>\r\n  );\r\n\r\n  return content\r\n}\r\n\r\nexport default Graph","import React from 'react'\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2> 404 Not Found! </h2>\r\n    </div>\r\n);\r\n\r\nexport default NotFound","import { Redirect } from \"react-router-dom\"\r\n\r\nconst Logout = () => {\r\n    localStorage.removeItem(\"token\")\r\n    localStorage.removeItem(\"username\")\r\n    localStorage.removeItem(\"password\")\r\n    return <Redirect to=\"/\" />\r\n}\r\n\r\nexport default Logout","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport Login from './Login'\r\nimport Dashboard from './Dashboard'\r\nimport Graph from './Graph'\r\nimport NotFound from './NotFound'\r\nimport Logout from './Logout'\r\n\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component = { Login }/>\r\n            <Route exact path=\"/logout\" component = { Logout } />\r\n            <Route exact path=\"/dashboard\" component = { Dashboard }/>\r\n            <Route exact path=\"/graphs/:username\" component = { Graph }/>\r\n            <Route component = { NotFound }/>\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Router","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Router from \"./components/Router\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}